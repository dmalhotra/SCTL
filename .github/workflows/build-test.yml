name: Build and Test

on:
  push:
    branches: [ master, ci-test ]
  pull_request:
    branches: [ master, ci-test ]

jobs:
  build:
    
    strategy:
      matrix:
        os: [ubuntu-latest] #, macos-latest]
        compiler: [g++-13] #, clang++]
        vecflag: [-march=native]
        memdbgflag: [""] #, -DSCTL_MEMDEBUG]
        optflag: [-O0 -gdwarf-4 -g -rdynamic] #, -O3]
        exclude:
          - os: macos-latest
            compiler: clang++
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@main

    - name: Setup Linux
      if: runner.os == 'Linux'
      run: sudo apt-get update && sudo apt-get install -y libomp-dev

    - name: Configure macOS
      if: runner.os == 'macOS'
      run: brew install gcc@12

    - name: Build
      run: |
        if [ "$(uname -s)" = "Darwin" ] && [ "$(uname -m)" = "arm64" ]; then
          make -j CXX="${{matrix.compiler}}" CXXFLAGS="-std=c++11 ${{matrix.optflag}} -mcpu=apple-m1 ${{matrix.memdbgflag}} -g -rdynamic -fopenmp -Wall -Wfloat-conversion -DSCTL_GLOBAL_MEM_BUFF=500 -DSCTL_QUAD_T=__float128 -DSCTL_PROFILE=5 -DSCTL_VERBOSE -DSCTL_SIG_HANDLER -fstack-protector"
        else
          make -j CXX="${{matrix.compiler}}" CXXFLAGS="-std=c++11 ${{matrix.optflag}} ${{matrix.vecflag}} ${{matrix.memdbgflag}} -g -rdynamic -fopenmp -Wall -Wfloat-conversion -DSCTL_GLOBAL_MEM_BUFF=500 -DSCTL_QUAD_T=__float128 -DSCTL_PROFILE=5 -DSCTL_VERBOSE -DSCTL_SIG_HANDLER -fsanitize=address,leak,undefined,pointer-compare,pointer-subtract,float-divide-by-zero,float-cast-overflow -fno-sanitize-recover=all -fstack-protector"
        fi

    - name: Test
      run: make test
