name: Build and Test

on:
  push:
    branches: [ master, ci-test ]
  pull_request:
    branches: [ master, ci-test ]

jobs:
  build:
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        compiler: [g++-13, clang++]
        vecflag: [-march=native]
        memdbgflag: ["", -DSCTL_MEMDEBUG]
        optflag: [-O0, -O3]
        cppflags: ["-std=c++11 -g -rdynamic -fopenmp -Wall -Wfloat-conversion -DSCTL_GLOBAL_MEM_BUFF=500 -DSCTL_PROFILE=5 -DSCTL_VERBOSE -DSCTL_SIG_HANDLER -fstack-protector"]
        asanflags: ["-fsanitize=address,leak,undefined,pointer-compare,pointer-subtract,float-divide-by-zero,float-cast-overflow -fno-sanitize-recover=all"]
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@main

    - name: Setup Linux
      if: runner.os == 'Linux'
      run: sudo apt-get update && sudo apt-get install -y libomp-dev

    - name: Configure macOS
      if: runner.os == 'macOS'
      run: |
        brew install gcc@13
        brew install llvm,libomp
        echo "PATH=/opt/homebrew/opt/llvm/bin:$PATH" >> "$GITHUB_ENV"

    - name: Build
      run: |
        if [ "$(uname -s)" = "Darwin" ] && [ "$(uname -m)" = "arm64" ]; then
        CXXFLAGS=
          if [ "${{matrix.compiler}}" == "clang++" ]; then
            make -j CXX="${{matrix.compiler}}" CXXFLAGS="${{matrix.cppflags}} ${{matrix.optflag}} -mcpu=apple-m1 ${{matrix.memdbgflag}} -lomp"
          else
            make -j CXX="${{matrix.compiler}}" CXXFLAGS="${{matrix.cppflags}} ${{matrix.optflag}} -mcpu=apple-m1 ${{matrix.memdbgflag}} -lomp -DSCTL_QUAD_T=__float128"
          fi
          # -march=native, and address sanititser don't work of Apple Silicon
        else
          make -j CXX="${{matrix.compiler}}" CXXFLAGS="${{matrix.cppflags}} ${{matrix.optflag}} ${{matrix.vecflag}} ${{matrix.memdbgflag}} -DSCTL_QUAD_T=__float128 ${{matrix.asanflags}}"
        fi

    - name: Test
      run: make test
