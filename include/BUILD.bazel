cc_library(
  name = "sctl",
  hdrs = [
    "sctl.hpp",
    "sctl/blas.h",
    "sctl/boundary_quadrature.hpp",
    "sctl/cheb_utils.hpp",
    "sctl/common.hpp",
    "sctl/fft_wrapper.hpp",
    "sctl/intrin-wrapper.hpp",
    "sctl/kernel_functions.hpp",
    "sctl/lapack.h",
    "sctl/legendre_rule.hpp",
    "sctl/morton.hpp",
    "sctl/parallel_solver.hpp",
    "sctl/quadrule.hpp",
    "sctl/sse2neon.h",
    "sctl/stacktrace.h",
    "sctl/tensor.hpp",
    "sctl/vec.hpp",
    "sctl/vec-test.hpp",
    # here starts the list of classes with separate implementation file
    "sctl/boundary_integral.hpp",
    "sctl/comm.hpp",
    "sctl/fmm-wrapper.hpp",
    "sctl/lagrange-interp.hpp",
    "sctl/math_utils.hpp",
    "sctl/math_utils.txx",
    "sctl/matrix.hpp",
    "sctl/mat_utils.hpp",
    "sctl/mem_mgr.hpp",
    "sctl/ode-solver.hpp",
    "sctl/ompUtils.hpp",
    "sctl/profile.hpp",
    "sctl/slender_element.hpp",
    "sctl/sph_harm.hpp",
    "sctl/tree.hpp",
    "sctl/vector.hpp",
    "sctl/vtudata.hpp",
  ],
  srcs = [
    "sctl/boundary_integral.cc",
    "sctl/comm.cc",
    "sctl/fmm-wrapper.cc",
    "sctl/lagrange-interp.cc",
    "sctl/matrix.cc",
    "sctl/mat_utils.cc",
    "sctl/mem_mgr.cc",
    "sctl/ode-solver.cc",
    "sctl/ompUtils.cc",
    "sctl/profile.cc",
    "sctl/slender_element.cc",
    "sctl/sph_harm.cc",
    "sctl/tree.cc",
    "sctl/vector.cc",
    "sctl/vtudata.cc",
  ],
  visibility = ["//visibility:public"],
  includes = ["."],
  copts = [
    "-DSCTL_GLOBAL_MEM_BUFF=0",
    "-DSCTL_QUAD_T=__float128",
    "-DSCTL_HAVE_BLAS",
    "-DSCTL_HAVE_LAPACK",
    "-DSCTL_HAVE_FFTW",
    "-DSCTL_HAVE_FFTWF",
    "-DSCTL_HAVE_FFTWL",
  ],
  linkopts = [
    "-lblas",
    "-llapack",
    "-lfftw3",
    "-lfftw3f",
    "-lfftw3l",
  ],
)
